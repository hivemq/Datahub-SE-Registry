{
  "id": "${instanceId}-input-sparkplug-schema",
  "type": "PROTOBUF",
  "schemaDefinition": "Cv8dChBzcGFya3BsdWdiLnByb3RvEiFjb20uY2lycnVzbGluay5zcGFya3BsdWcucHJvdG9idWYikR0KB1BheWxvYWQSHAoJdGltZXN0YW1wGAEgASgEUgl0aW1lc3RhbXASSwoHbWV0cmljcxgCIAMoCzIxLmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLk1ldHJpY1IHbWV0cmljcxIQCgNzZXEYAyABKARSA3NlcRISCgR1dWlkGAQgASgJUgR1dWlkEhIKBGJvZHkYBSABKAxSBGJvZHka3QUKCFRlbXBsYXRlEhgKB3ZlcnNpb24YASABKAlSB3ZlcnNpb24SSwoHbWV0cmljcxgCIAMoCzIxLmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLk1ldHJpY1IHbWV0cmljcxJdCgpwYXJhbWV0ZXJzGAMgAygLMj0uY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmLlBheWxvYWQuVGVtcGxhdGUuUGFyYW1ldGVyUgpwYXJhbWV0ZXJzEiEKDHRlbXBsYXRlX3JlZhgEIAEoCVILdGVtcGxhdGVSZWYSIwoNaXNfZGVmaW5pdGlvbhgFIAEoCFIMaXNEZWZpbml0aW9uGrgDCglQYXJhbWV0ZXISEgoEbmFtZRgBIAEoCVIEbmFtZRISCgR0eXBlGAIgASgNUgR0eXBlEh0KCWludF92YWx1ZRgDIAEoDUgAUghpbnRWYWx1ZRIfCgpsb25nX3ZhbHVlGAQgASgESABSCWxvbmdWYWx1ZRIhCgtmbG9hdF92YWx1ZRgFIAEoAkgAUgpmbG9hdFZhbHVlEiMKDGRvdWJsZV92YWx1ZRgGIAEoAUgAUgtkb3VibGVWYWx1ZRIlCg1ib29sZWFuX3ZhbHVlGAcgASgISABSDGJvb2xlYW5WYWx1ZRIjCgxzdHJpbmdfdmFsdWUYCCABKAlIAFILc3RyaW5nVmFsdWUSgAEKD2V4dGVuc2lvbl92YWx1ZRgJIAEoCzJVLmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLlRlbXBsYXRlLlBhcmFtZXRlci5QYXJhbWV0ZXJWYWx1ZUV4dGVuc2lvbkgAUg5leHRlbnNpb25WYWx1ZRojChdQYXJhbWV0ZXJWYWx1ZUV4dGVuc2lvbioICAEQgICAgAJCBwoFdmFsdWUqCAgGEICAgIACGrcFCgdEYXRhU2V0EiQKDm51bV9vZl9jb2x1bW5zGAEgASgEUgxudW1PZkNvbHVtbnMSGAoHY29sdW1ucxgCIAMoCVIHY29sdW1ucxIUCgV0eXBlcxgDIAMoDVIFdHlwZXMSSgoEcm93cxgEIAMoCzI2LmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLkRhdGFTZXQuUm93UgRyb3dzGpEDCgxEYXRhU2V0VmFsdWUSHQoJaW50X3ZhbHVlGAEgASgNSABSCGludFZhbHVlEh8KCmxvbmdfdmFsdWUYAiABKARIAFIJbG9uZ1ZhbHVlEiEKC2Zsb2F0X3ZhbHVlGAMgASgCSABSCmZsb2F0VmFsdWUSIwoMZG91YmxlX3ZhbHVlGAQgASgBSABSC2RvdWJsZVZhbHVlEiUKDWJvb2xlYW5fdmFsdWUYBSABKAhIAFIMYm9vbGVhblZhbHVlEiMKDHN0cmluZ192YWx1ZRgGIAEoCUgAUgtzdHJpbmdWYWx1ZRKAAQoPZXh0ZW5zaW9uX3ZhbHVlGAcgASgLMlUuY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmLlBheWxvYWQuRGF0YVNldC5EYXRhU2V0VmFsdWUuRGF0YVNldFZhbHVlRXh0ZW5zaW9uSABSDmV4dGVuc2lvblZhbHVlGiEKFURhdGFTZXRWYWx1ZUV4dGVuc2lvbioICAEQgICAgAJCBwoFdmFsdWUabAoDUm93ElsKCGVsZW1lbnRzGAEgAygLMj8uY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmLlBheWxvYWQuRGF0YVNldC5EYXRhU2V0VmFsdWVSCGVsZW1lbnRzKggIAhCAgICAAioICAUQgICAgAIajQUKDVByb3BlcnR5VmFsdWUSEgoEdHlwZRgBIAEoDVIEdHlwZRIXCgdpc19udWxsGAIgASgIUgZpc051bGwSHQoJaW50X3ZhbHVlGAMgASgNSABSCGludFZhbHVlEh8KCmxvbmdfdmFsdWUYBCABKARIAFIJbG9uZ1ZhbHVlEiEKC2Zsb2F0X3ZhbHVlGAUgASgCSABSCmZsb2F0VmFsdWUSIwoMZG91YmxlX3ZhbHVlGAYgASgBSABSC2RvdWJsZVZhbHVlEiUKDWJvb2xlYW5fdmFsdWUYByABKAhIAFIMYm9vbGVhblZhbHVlEiMKDHN0cmluZ192YWx1ZRgIIAEoCUgAUgtzdHJpbmdWYWx1ZRJlChFwcm9wZXJ0eXNldF92YWx1ZRgJIAEoCzI2LmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLlByb3BlcnR5U2V0SABSEHByb3BlcnR5c2V0VmFsdWUSawoScHJvcGVydHlzZXRzX3ZhbHVlGAogASgLMjouY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmLlBheWxvYWQuUHJvcGVydHlTZXRMaXN0SABSEXByb3BlcnR5c2V0c1ZhbHVlEnoKD2V4dGVuc2lvbl92YWx1ZRgLIAEoCzJPLmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLlByb3BlcnR5VmFsdWUuUHJvcGVydHlWYWx1ZUV4dGVuc2lvbkgAUg5leHRlbnNpb25WYWx1ZRoiChZQcm9wZXJ0eVZhbHVlRXh0ZW5zaW9uKggIARCAgICAAkIHCgV2YWx1ZRp9CgtQcm9wZXJ0eVNldBISCgRrZXlzGAEgAygJUgRrZXlzElAKBnZhbHVlcxgCIAMoCzI4LmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLlByb3BlcnR5VmFsdWVSBnZhbHVlcyoICAMQgICAgAIadQoPUHJvcGVydHlTZXRMaXN0ElgKC3Byb3BlcnR5c2V0GAEgAygLMjYuY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmLlBheWxvYWQuUHJvcGVydHlTZXRSC3Byb3BlcnR5c2V0KggIAhCAgICAAhrvAQoITWV0YURhdGESIgoNaXNfbXVsdGlfcGFydBgBIAEoCFILaXNNdWx0aVBhcnQSIQoMY29udGVudF90eXBlGAIgASgJUgtjb250ZW50VHlwZRISCgRzaXplGAMgASgEUgRzaXplEhAKA3NlcRgEIAEoBFIDc2VxEhsKCWZpbGVfbmFtZRgFIAEoCVIIZmlsZU5hbWUSGwoJZmlsZV90eXBlGAYgASgJUghmaWxlVHlwZRIQCgNtZDUYByABKAlSA21kNRIgCgtkZXNjcmlwdGlvbhgIIAEoCVILZGVzY3JpcHRpb24qCAgJEICAgIACGsQHCgZNZXRyaWMSEgoEbmFtZRgBIAEoCVIEbmFtZRIUCgVhbGlhcxgCIAEoBFIFYWxpYXMSHAoJdGltZXN0YW1wGAMgASgEUgl0aW1lc3RhbXASGgoIZGF0YXR5cGUYBCABKA1SCGRhdGF0eXBlEiMKDWlzX2hpc3RvcmljYWwYBSABKAhSDGlzSGlzdG9yaWNhbBIhCgxpc190cmFuc2llbnQYBiABKAhSC2lzVHJhbnNpZW50EhcKB2lzX251bGwYByABKAhSBmlzTnVsbBJPCghtZXRhZGF0YRgIIAEoCzIzLmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLk1ldGFEYXRhUghtZXRhZGF0YRJWCgpwcm9wZXJ0aWVzGAkgASgLMjYuY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmLlBheWxvYWQuUHJvcGVydHlTZXRSCnByb3BlcnRpZXMSHQoJaW50X3ZhbHVlGAogASgNSABSCGludFZhbHVlEh8KCmxvbmdfdmFsdWUYCyABKARIAFIJbG9uZ1ZhbHVlEiEKC2Zsb2F0X3ZhbHVlGAwgASgCSABSCmZsb2F0VmFsdWUSIwoMZG91YmxlX3ZhbHVlGA0gASgBSABSC2RvdWJsZVZhbHVlEiUKDWJvb2xlYW5fdmFsdWUYDiABKAhIAFIMYm9vbGVhblZhbHVlEiMKDHN0cmluZ192YWx1ZRgPIAEoCUgAUgtzdHJpbmdWYWx1ZRIhCgtieXRlc192YWx1ZRgQIAEoDEgAUgpieXRlc1ZhbHVlElkKDWRhdGFzZXRfdmFsdWUYESABKAsyMi5jb20uY2lycnVzbGluay5zcGFya3BsdWcucHJvdG9idWYuUGF5bG9hZC5EYXRhU2V0SABSDGRhdGFzZXRWYWx1ZRJcCg50ZW1wbGF0ZV92YWx1ZRgSIAEoCzIzLmNvbS5jaXJydXNsaW5rLnNwYXJrcGx1Zy5wcm90b2J1Zi5QYXlsb2FkLlRlbXBsYXRlSABSDXRlbXBsYXRlVmFsdWUScQoPZXh0ZW5zaW9uX3ZhbHVlGBMgASgLMkYuY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmLlBheWxvYWQuTWV0cmljLk1ldHJpY1ZhbHVlRXh0ZW5zaW9uSABSDmV4dGVuc2lvblZhbHVlGiAKFE1ldHJpY1ZhbHVlRXh0ZW5zaW9uKggIARCAgICAAkIHCgV2YWx1ZSoICAYQgICAgAJCNAohY29tLmNpcnJ1c2xpbmsuc3BhcmtwbHVnLnByb3RvYnVmQg9TcGFya3BsdWdCUHJvdG8=",
  "arguments": {
    "messageType": "Payload"
  }
}
